def generate_step(file, step)
  return unless step.complete?

  comment = "Step #{step.order}: #{helpers.escape_javascript helpers.get_comment(step)}"
  file.puts "\n# #{comment}"

  case step.action_type
    when 'pageload'
      file.puts "driver.get '#{helpers.escape_javascript step.webpage}'"
    when 'scroll'
      file.puts "driver.execute_script 'scroll(#{step.scrollLeft}, #{step.scrollTop})'"
    when 'keypress'
      file.puts "driver.action.send_keys('#{helpers.escape_javascript step.typed}').perform"
    when 'resize'
      file.puts "driver.manage.window.resize_to(#{step.screenwidth}, #{step.screenheight})"
    when 'click'
      type = step.selector[:selectorType]
      selector = helpers.escape_javascript step.selector[:selector].strip
      eq = step.selector[:eq].to_i
      case type # first, find DOM with WebDriver
        when 'id'
          file.puts "driver.find_element(:id, '#{selector}')"
        when 'class'
          if selector.include? ' '
            selector = ".#{selector.split.join('.')}"
            file.puts "driver.find_elements(:css => '#{selector}')[#{eq}]"
          else # 1 single class
            file.puts "driver.find_elements(:class => '#{selector}')[#{eq}]"
          end
        when 'tag'
          file.puts "driver.find_elements(:tag_name => '#{selector}')[#{eq}]"
        when 'name'
          file.puts "driver.find_elements(:name => '#{selector}')[#{eq}]"
        when 'partialLink' # link text
          file.puts "driver.find_elements(:partial_link_text => '#{selector}')[#{eq}]"
        when 'href'
          file.puts "driver.find_elements(:css => \"a[href='#{selector}']\")[#{eq}]"
        when 'partialHref'
          file.puts "driver.find_elements(:css => \"a[href*='#{selector}']\")[#{eq}]"
        when 'button' # use XPath
          file.puts "driver.find_elements(:xpath, \"//button[text()[contains(.,'#{selector}')]]\")[#{eq}]"
        when 'css'
          if eq > 0
            file.puts "driver.find_elements(:css => '#{selector}')[#{eq}]"
          else
            file.puts "driver.find_element(:css, '#{selector}')"
          end
        when 'coordination'
          file.puts "elem = driver.find_elements(:tag_name => 'body').first"
          file.puts "driver.action.move_to(elem, #{step.selector[:x]}, #{step.selector[:y]}).click.perform"
        else
          nil
      end
    else
      true
  end
end


title = "Generated by UIChecks.com
Test title: #{test.title}
Language: #{language.capitalize}"

file.puts "=begin
#{title}\n=end\n"
file.puts "require 'selenium-webdriver'
driver = Selenium::WebDriver.for :chrome\n\n"

first_step = Step.where(test: @test).first
file.puts "driver.manage.window.resize_to(#{first_step.screenwidth}, #{first_step.screenheight})" if first_step.screenwidth

if @test.suite.prep_tests.count > 0
  file.puts "# suite's pre-tests"
  @test.suite.prep_tests.each { |test|
    test.steps.each { |step|
      helpers.generate_step(file, step)
    }
  }
end

@test.steps.each { |step|
    generate_step(file, step)
}






